{"version":2,"ops":[{"type":1,"author":{"id":"9220cb50cc752fe99781ba3a9dfcc011de3ac407"},"timestamp":1615730968,"metadata":{"github-id":"MDU6SXNzdWU4MzExNjY0MDQ=","github-url":"https://github.com/vmiklos/osm-gimmisn/issues/1121","origin":"github"},"title":"Oldalbetöltési optimalizáció: progresszív egyoldalas webalkalmazás","message":"Ehhez gyakorlatilag az egész frontendet ki kell cserélni, így nem várom el, csak érdekességként megírom.\n\nEkkor egyetlen statikus HTML-ben navigál a felhasználó és sosem tölt be új oldalt. Így még a kattintásonkénti 50-100ms statikus oldalbetöltést és rendering CPU időt is meg lehetne spórolni.\n\nA HTML ehhez vagy előre tartalmaz minden információt, vagy dinamikusan (kattintás vagy hover esetén) kéri le az információkat a backendről.\n\nAz implementációra többféle megoldás adódik.:\n* Egy fapados, amikor külön elérhető volna multi-page és single-page változat.\n* Egy kevéssé optimális, de megjelenésileg izomorf PWA amikor a főoldal minden információt tartalmaz (emiatt picit nagyobb), viszont ebből NoScript esetén csak a kezdőképernyő van láthatóra állítva, a többi információra statikus linkek vezetnek ki amit betöltés után cserél ki a JavaScript dinamizmusra.\n* Egy barátságosabb, de eltérő kinézetet eredményező PWA, ha a főoldalon NoScript esetén egymás alatt látható minden képernyő (id-linkelhetően ráadásul). Scriptelés esetén mindig csak 1-1 képernyőt mutatna.\n* Univerzális megoldásként elképzelhető CSS-only, JavaScript nélküli megoldás is, amikor az alképernyők közötti váltásokat CSS akciók végzik. Ez megoldást jelentene a következő aggályodra is: `Ez ott bukik el, hogy jelenleg az oldal tökéletesen működik JS nélkül is, tehát bármilyen JS használat csak akkor megengedett, ha opcionális. Ha megnézed, az összes js handler js-ből regisztrálódik be, anélkül is mennek a linkek, sima http gettel.`","files":null}]}