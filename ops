{"version":2,"ops":[{"type":3,"author":{"id":"a5e3cd4a35e34a7ac5bb7d3c9ecf1136f40c872a"},"timestamp":1617539342,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgxMzAyNDg4OQ==","github-url":"https://github.com/vmiklos/osm-gimmisn/issues/1119#issuecomment-813024889"},"message":"Ez egy elég nagy téma, talán két részre lehetne bontani: 1) a diff cache-elése 2) statikus html az olyan oldalra ami ritkán változik.\n\nA cache azért fontos, mert pl a footer tartalmazza a git hash-t ami arányag gyakran változik, tipikusan naponta. 0-ról újraszámolni az összes missing-housenumbers oldalt sok relációra csak azért, mert változott a git hash az elég nagy pocsékolás. Más static site generátorok is tipikusan cache-elnek, pl a pelican is cache-eli az asciidoc outputot, így tudja kb 1 sec alatt legenerálni egy 1000 oldalból álló oldal tartalmát. Ezt eddig azért nem valósítottam meg, mert minden teljesítménybeli fejlesztés növeli a szoftver bonyolultságát, és én házszámozni szeretnék az osm kontextusában, nem programozni. Minél unalmasabb, régimódibb és egyszerűbb a technológia, annál jobb. :) De most a 11. kerület legenerálása nálam helyben is 26 sec körül van, ami egyértelműen lassú, így látom értelmét valamiféle cache-elésnek. Elvileg ezek a függőségek vannak: 1) osm utcák 2) osm házszámok 3) ref házszámok 4) filterek. Ha a HTML kimenet lényegi részét elmentjük és nézzük, hogy a cache ennél a 4-nél újabb legyen, akkor ez megoldható.\n\nA static html ezek után engem max akkor izgat ha a cache önmagában nem viszi el mondjuk a költség 80%át. Egyéb esetben inkább adnék json apit, és utána külső projekt építhet belőle html/js webappot ha akar, ezzel én nem nagyon tervezek foglalkozni.\n\nDe a cache-t sem most, inkább megyek házszámozni. :)","files":null},{"type":3,"author":{"id":"9220cb50cc752fe99781ba3a9dfcc011de3ac407"},"timestamp":1617540441,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgxMzAyNzE5NA==","github-url":"https://github.com/vmiklos/osm-gimmisn/issues/1119#issuecomment-813027194"},"message":"Rendben. Amikor nyitottam a hibajegyet már elfelejtettem hogy van üzemeltetve (ez pedig nincs dokumentálva sem) - hirtelen nem volt meg a kontextus, hogy nem fut alattad igazi web szerver ami pillanatok alatt visszaadhat statikus oldalakat.\n\nAmennyiben így is, úgy is be kell tölteni egy Python értelmezőt és a modulokat, már tényleg kis különbség, hogy az egész oldal bitenként van-e elmentve avagy csak a számításnak az a része ami az üres oldalbetöltés feletti mondjuk 0.1s-nél hosszabb időt teszi ki. Tehát rád bízom, hogy a memoizálás melyik szinten legyen.\n\n_Ötlet: bárhol is fog ez megtörténni, működhetne lusta kiértékeléssel is - azaz bár ideálisnak tartanám ha minden cache minden nap frissen lenne tartva, de ha az túl sok idő, elég csak az első használatkor elindítani egy frissítést. (UX szempontjából amúgy rá lehet ültetni egy hacket, hogy ilyenkor stale cache értéket adunk vissza a felhasználónak illetve esetleg erről egy tájékoztató bannert és egy linket amivel frissíthetik az oldalt időnként)_\n\nJó sportolást!","files":null},{"type":2,"author":{"id":"9220cb50cc752fe99781ba3a9dfcc011de3ac407"},"timestamp":1617540544,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDU0OTA3NDg0OA=="},"title":"Oldalbetöltési optimalizáció: a felhasználók által elért végpontok memoizáljanak, várható értékben ne sokat számoljanak","was":"Oldalbetöltési optimalizáció: mutassanak a felhasználók által használt végpontok statikus HTML-re"},{"type":3,"author":{"id":"a5e3cd4a35e34a7ac5bb7d3c9ecf1136f40c872a"},"timestamp":1617569396,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgxMzA5NzI4NA==","github-url":"https://github.com/vmiklos/osm-gimmisn/issues/1119#issuecomment-813097284"},"message":"\u003e ez pedig nincs dokumentálva sem)\n\nhttps://github.com/vmiklos/osm-gimmisn/blob/master/INSTALL.adoc#production-setup\n\nSzólj ha valami nem világos\n\n\u003e Jó sportolást!\n\nKöszi!","files":null},{"type":4,"author":{"id":"2156a65fc6098060b1a2e2985f23575583c47bc9"},"timestamp":1617569580,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDU0OTUwMTExNg=="},"status":2}]}