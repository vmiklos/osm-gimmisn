{"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"ops":[{"type":3,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1617540441,"nonce":"4hpfBWHKXj/FQEWBwX0Bk7JkygI=","message":"Rendben. Amikor nyitottam a hibajegyet már elfelejtettem hogy van üzemeltetve (ez pedig nincs dokumentálva sem) - hirtelen nem volt meg a kontextus, hogy nem fut alattad igazi web szerver ami pillanatok alatt visszaadhat statikus oldalakat.\n\nAmennyiben így is, úgy is be kell tölteni egy Python értelmezőt és a modulokat, már tényleg kis különbség, hogy az egész oldal bitenként van-e elmentve avagy csak a számításnak az a része ami az üres oldalbetöltés feletti mondjuk 0.1s-nél hosszabb időt teszi ki. Tehát rád bízom, hogy a memoizálás melyik szinten legyen.\n\n_Ötlet: bárhol is fog ez megtörténni, működhetne lusta kiértékeléssel is - azaz bár ideálisnak tartanám ha minden cache minden nap frissen lenne tartva, de ha az túl sok idő, elég csak az első használatkor elindítani egy frissítést. (UX szempontjából amúgy rá lehet ültetni egy hacket, hogy ilyenkor stale cache értéket adunk vissza a felhasználónak illetve esetleg erről egy tájékoztató bannert és egy linket amivel frissíthetik az oldalt időnként)_\n\nJó sportolást!","files":null},{"type":2,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1617540544,"nonce":"nnhmMVNMva8uDMUOI3ENGIsDw6s=","title":"Oldalbetöltési optimalizáció: a felhasználók által elért végpontok memoizáljanak, várható értékben ne sokat számoljanak","was":"Oldalbetöltési optimalizáció: mutassanak a felhasználók által használt végpontok statikus HTML-re"}]}