{"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"ops":[{"type":1,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1615730968,"nonce":"PMUesZtEaUBY6FBGjWTLS/Ylj64=","title":"Oldalbetöltési optimalizáció: progresszív egyoldalas webalkalmazás","message":"Ehhez gyakorlatilag az egész frontendet ki kell cserélni, így nem várom el, csak érdekességként megírom.\n\nEkkor egyetlen statikus HTML-ben navigál a felhasználó és sosem tölt be új oldalt. Így még a kattintásonkénti 50-100ms statikus oldalbetöltést és rendering CPU időt is meg lehetne spórolni.\n\nA HTML ehhez vagy előre tartalmaz minden információt, vagy dinamikusan (kattintás vagy hover esetén) kéri le az információkat a backendről.\n\nAz implementációra többféle megoldás adódik.:\n* Egy fapados, amikor külön elérhető volna multi-page és single-page változat.\n* Egy kevéssé optimális, de megjelenésileg izomorf PWA amikor a főoldal minden információt tartalmaz (emiatt picit nagyobb), viszont ebből NoScript esetén csak a kezdőképernyő van láthatóra állítva, a többi információra statikus linkek vezetnek ki amit betöltés után cserél ki a JavaScript dinamizmusra.\n* Egy barátságosabb, de eltérő kinézetet eredményező PWA, ha a főoldalon NoScript esetén egymás alatt látható minden képernyő (id-linkelhetően ráadásul). Scriptelés esetén mindig csak 1-1 képernyőt mutatna.\n* Univerzális megoldásként elképzelhető CSS-only, JavaScript nélküli megoldás is, amikor az alképernyők közötti váltásokat CSS akciók végzik. Ez megoldást jelentene a következő aggályodra is: `Ez ott bukik el, hogy jelenleg az oldal tökéletesen működik JS nélkül is, tehát bármilyen JS használat csak akkor megengedett, ha opcionális. Ha megnézed, az összes js handler js-ből regisztrálódik be, anélkül is mennek a linkek, sima http gettel.`","files":null},{"type":3,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1615731436,"nonce":"NE1k6W1G5Sxi2MiYtEvFl53yo6A=","message":"Inspiráció:\n- https://unhosted.org/\n- https://en.wikipedia.org/wiki/Single-page_application#Thin_server_architecture\n- https://en.wikipedia.org/wiki/Progressive_web_application#Service_workers\n- https://en.wikipedia.org/wiki/Ajax_(programming)#History\n- https://en.wikipedia.org/wiki/Remote_scripting#Libraries\n- https://wiki-offline.jakearchibald.com/wiki/Rick_and_Morty\n  - via https://developers.google.com/web/fundamentals/architecture/app-shell","files":null},{"type":4,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1619627963,"nonce":"+BL58XsmDN+C9UruWNBHKS01OOQ=","status":2}]}