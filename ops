{"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"ops":[{"type":1,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1615730276,"nonce":"toB9yaCafm6VJkRBEDEyOCkIOt4=","title":"Oldalbetöltési optimalizáció: mutassanak a felhasználók által használt végpontok statikus HTML-re","message":"Jelentősen csökkentené a késleltetést (ami jelenleg 300-500ms+) ha minden oldalbetöltés statikus HTML-re mutatna. Ezen belül két megoldás adódik:\n* Vagy az adatokat JavaScripttel töltené ki (vagy iframe, bár azzal nem lehet jót kihozni ebből...),\n* Vagy még optimálisabban előre ki volna töltve adatokkal, így nem is kéne lekérni semmit.\n\nUtóbbihoz nem csak a txt-ket generálná a cron és a frissítés gomb meghívása, hanem statikus HTML-ként az eredményeket is. Ehhez ipari oldalakon illendő versenyhelyzet ütközések okán verziózott fájlnevekre átállni, bár itt még lehet, hogy elmegy simán a felülírogatás.\n\nKicsit kódolni is kellene hozzá, bár érzésre nem vészesen sokat.\n\nErre a felvetésre a következőt válaszoltad, bár nem 100%, hogy mire gondolsz:\n\n\u003e Lehet elég lenne csak annyi, hogy a diff kimenete cache-elve legyen, abból htmlt generálni elég olcsó.","files":null},{"type":6,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1615731360,"nonce":"jLMZxCvxkVaigO7z8kF8//08xZ0=","target":"5c758e357610acbe32dc102d3d601d2c634a214fdea3b3ddb01dc493284b1136","message":"Jelentősen csökkentené a késleltetést (ami jelenleg 300-500ms+) ha minden oldalbetöltés statikus HTML-re mutatna. Ezen belül két megoldás adódik:\n* Vagy az adatokat JavaScripttel töltené ki (vagy iframe, bár azzal nem lehet jót kihozni ebből...),\n* Vagy még optimálisabban előre ki volna töltve adatokkal, így nem is kéne lekérni semmit.\n\nUtóbbihoz nem csak a txt-ket generálná a cron és a frissítés gomb meghívása, hanem statikus HTML-ként az eredményeket is. Ehhez ipari oldalakon illendő versenyhelyzet ütközések okán verziózott fájlnevekre átállni, bár itt még lehet, hogy elmegy simán a felülírogatás.\n\nKicsit kódolni is kellene hozzá, bár érzésre nem vészesen sokat.\n\nErre a felvetésre a következőt válaszoltad, bár nem 100%, hogy mire gondolsz:\n\n\u003e Lehet elég lenne csak annyi, hogy a diff kimenete cache-elve legyen, abból htmlt generálni elég olcsó.\n\nAlternatív, drágább, de jobb implementáció: #1121","files":null},{"type":3,"author":{"id":"6effe25e0bb393b26254ccb2567bbdae973bb2c09be6b2086039815edec2f325"},"timestamp":1617261446,"nonce":"7bosJGy8AJcxf1/L8lIMQu7MAdU=","message":"Lehetne streamelni a HTML-t alternatívaként, azaz soronként kiírni a táblázatot a teljes oldal pufferelése helyett. Ez sokkal több fejlesztést igényelne és kicsit bonyolultabb és csúnyább is lehet tőle a kód, ezért érzésre nem javaslom.\n\nNos, így az architektúrádat átgondolva bár a teljesen statikus HTML-ek igazi webszerver általi kiszolgálása volna a leggyorsabb (\u003c50ms), akkor tényleg egy szűk keresztmetszetet képező rutint lehet érdemes memoizálni.\n\nA fenti kommentben a `diff` ha jól értem erre vonatkozik `areas.py:get_missing_housenumbers()` amit a `wsgi.py:missing_housenumbers_view_res()` hív.\n\nNa most lehet egy alternatíva, hogy így próbálgatással és profilozással egyenként bővítjük a cache-elt köztes adatok körét, vagy tényleg átgondolhatjuk, hogy nem-e lehet mindent egységes módon statikussá varázsolni (és leíróan dekorálni az adatfüggőségeket, hogy tudja melyik oldalakat kell újragenerálni frissítés esetén).","files":null}]}